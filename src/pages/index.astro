---
export const prerender = false;
import CurrentDate from '../components/CurrentDate.astro';
import CurrentWeather from '../components/CurrentWeather.astro';
import ThreeHourForecast from '../components/ThreeHourForecast.astro';
import Welcome from '../components/Welcome.astro';
import DailyForecast from '../components/DailyForecast.astro';
import SearchInput from '../components/SearchInput.astro';
import Layout from '../layouts/Layout.astro';
import FavoriteButton from '../components/FavoriteButton.astro';
import FavoriteDropdown from '../components/FavoriteDropdown.jsx';
import "../styles/global.css";

let selectedDate = new Date().toISOString().split("T")[0];

const cookieHeader = Astro.request.headers.get("cookie");
if (cookieHeader) {
  const match = cookieHeader.match(/selectedDate=([^;]+)/);
  if (match) {
    selectedDate = match[1];
  }
}
---

<Layout>
	<div class="flex items-center max-w-[1080px] mx-auto pt-28 justify-between">
		<div class="max-w-[240px] ml-auto">
			<FavoriteDropdown client:load />
		</div>
		<div class="w-full flex items-center justify-center">
			<div class="flex items-center gap-2">
				<h1 id="city-name" class="text-center text-2xl font-medium">Vancouver</h1>
				<FavoriteButton city="Vancouver" latitude={49.2827} longitude={-123.1207} />
			</div>
		</div>
		<div class="max-w-[240px] ml-auto">
			<SearchInput />
		</div>
	</div>

  <div class="flex justify-center max-w-[1080px] mx-auto pt-8">
    <div class="w-full">
      <div class="flex">
        <CurrentDate selectedDate={selectedDate} />
        <CurrentWeather selectedDate={selectedDate} />
      </div>
      <ThreeHourForecast lat="48.8566" lon="2.3522" city="Paris" selectedDate={selectedDate} />
      <DailyForecast />
    </div>
  </div>
</Layout>

<script is:inline>
  // Lógica para salvar data clicada (DailyForecast)
  window.addEventListener('date-selected', (event) => {
    const selectedDate = event.detail;
    console.log("✅ Saving selectedDate in cookie:", selectedDate);

    setTimeout(() => {
      document.cookie = `selectedDate=${selectedDate}; path=/`;
      window.location.reload();
    }, 100);
  });

  // Lógica para atualizar nome da cidade (SearchInput)
  window.addEventListener('cityChanged', (event) => {
    const cityData = event.detail;
    const cityNameElement = document.getElementById('city-name');
    if (cityNameElement) {
      cityNameElement.textContent = cityData.address || 'Vancouver';
    }
  });

  document.addEventListener('citySelected', (event) => {
	const cityData = event.detail;
    const cityNameElement = document.getElementById('city-name');
    if (cityNameElement) {
      cityNameElement.textContent = cityData.address || 'Vancouver';
    }
  });
</script>
