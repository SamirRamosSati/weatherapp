---
import WeatherIcon from './WeatherIcon.astro';

const { lat, lon, city = 'Unknown Location' } = Astro.props;

let data;

try {
  const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,weathercode&forecast_days=1&timezone=auto`);
  if (!response.ok) throw new Error("Failed to fetch weather data.");
  data = await response.json();
} catch (error) {
  console.error("Weather API error:", error);
  data = null;
}

const fullHours = data?.hourly?.time || [];
const fullTemps = data?.hourly?.temperature_2m || [];
const fullCodes = data?.hourly?.weathercode || [];

const hours = fullHours.filter((_, i) => i % 3 === 0).slice(0, 9);
const temps = fullTemps.filter((_, i) => i % 3 === 0).slice(0, 9);
const codes = fullCodes.filter((_, i) => i % 3 === 0).slice(0, 9);
---

<div class="p-6 bg-white/10 backdrop-blur rounded-xl text-black w-full max-w-6xl mx-auto">
  <h2 class="text-lg font-semibold mb-4">3 hour range – {city}</h2>
  <div class="grid grid-cols-9 gap-4">
    {hours.map((time, i) => (
      <div class="flex flex-col items-center space-y-1 text-sm" key={i}>
        <div>{new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>
        <WeatherIcon code={codes[i]} />
        <div>{temps[i]}°C</div>
      </div>
    ))}
  </div>
</div>
