---
import WeatherIcon from './WeatherIcon.astro';

const { lat, lon, city = 'Unknown Location', selectedDate } = Astro.props;

console.log("✅ selectedDate received in ThreeHourForecast:", selectedDate);

let data;
const urlDate = selectedDate ?? new Date().toISOString().split("T")[0];
console.log("📅 API called with date:", urlDate);

try {
  const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,weathercode&start_date=${urlDate}&end_date=${urlDate}&timezone=auto`);
  if (!response.ok) throw new Error("❌ Failed to fetch weather data.");
  data = await response.json();
} catch (error) {
  console.error("⚠️ Weather API error:", error);
  data = null;
}

const fullHours = data?.hourly?.time || [];
const fullTemps = data?.hourly?.temperature_2m || [];
const fullCodes = data?.hourly?.weathercode || [];

const hours = fullHours.filter((_, i) => i % 3 === 0);
const temps = fullTemps.filter((_, i) => i % 3 === 0);
const codes = fullCodes.filter((_, i) => i % 3 === 0);
---

<div class="p-6 bg-white/10 backdrop-blur rounded-xl text-black w-full max-w-6xl mx-auto">
  <div class="flex gap-4 hide-scrollbar overflow-x-auto snap-x snap-mandatory scroll-smooth md:grid md:grid-cols-9 md:overflow-visible">
    {hours.map((time, i) => (
      <div class="flex flex-col items-center space-y-1 text-sm min-w-[100px] snap-start" key={i}>
        <div class="text-xs">
          {new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
        </div>
        <WeatherIcon code={codes[i]} isVertical={true} temp={temps[i]} />
      </div>
    ))}
  </div>
</div>
